From both CUDA sample and also
	https://classroom.udacity.com/courses/cs344/lessons/55120467/concepts/670742910923
	or their free CUDA class from Square to Cube

vectorAdd.exe
[Vector addition of 50000 elements] github Dennis version with + 689
test 0.564321
test 0.000000 <-- no .0
Copy input data from the host memory to the CUDA device
CUDA kernel launch with 196 blocks of 256 threads
Copy output data from the CUDA device to the host memory
Test Not Verified, 689

--> no of elements is 50000


    0: 689 + 0.001251 + 0.563585 = 256000000.000000
    1: 689 + 0.193304 + 0.808740 = 256000000.000000
    2: 689 + 0.585009 + 0.479873 = 256000000.000000
    3: 689 + 0.350291 + 0.895962 = 256000000.000000
    4: 689 + 0.822840 + 0.746605 = 256000000.000000
    5: 689 + 0.174108 + 0.858943 = 256000000.000000
    6: 689 + 0.710501 + 0.513535 = 256000000.000000
    7: 689 + 0.303995 + 0.014985 = 256000000.000000
    8: 689 + 0.091403 + 0.364452 = 256000016.000000
    9: 689 + 0.147313 + 0.165899 = 256000016.000000
   10: 689 + 0.988525 + 0.445692 = 256000016.000000
   11: 689 + 0.119083 + 0.004669 = 256000016.000000
   12: 689 + 0.008911 + 0.377880 = 256000016.000000
   13: 689 + 0.531663 + 0.571184 = 256000016.000000
   14: 689 + 0.601764 + 0.607166 = 256000016.000000
   15: 689 + 0.166234 + 0.663045 = 256000016.000000
   16: 689 + 0.450789 + 0.352123 = 256000016.000000
   17: 689 + 0.057039 + 0.607685 = 256000016.000000
   18: 689 + 0.783319 + 0.802606 = 256000016.000000
   19: 689 + 0.519883 + 0.301950 = 256000016.000000
   20: 689 + 0.875973 + 0.726676 = 256000016.000000
   21: 689 + 0.955901 + 0.925718 = 256000016.000000
   22: 689 + 0.539354 + 0.142338 = 256000016.000000
   23: 689 + 0.462081 + 0.235328 = 256000016.000000
   24: 689 + 0.862239 + 0.209601 = 256000032.000000
   25: 689 + 0.779656 + 0.843654 = 256000032.000000
   26: 689 + 0.996796 + 0.999695 = 256000032.000000
   27: 689 + 0.611499 + 0.392438 = 256000032.000000
   28: 689 + 0.266213 + 0.297281 = 256000032.000000
   29: 689 + 0.840144 + 0.023743 = 256000032.000000
   30: 689 + 0.375866 + 0.092624 = 256000032.000000
   31: 689 + 0.677206 + 0.056215 = 256000032.000000
   32: 689 + 0.008789 + 0.918790 = 256000032.000000
   33: 689 + 0.275887 + 0.272896 = 256000032.000000
   34: 689 + 0.587909 + 0.691183 = 256000032.000000
   35: 689 + 0.837611 + 0.726493 = 256000032.000000
   36: 689 + 0.484939 + 0.205359 = 256000032.000000
   37: 689 + 0.743736 + 0.468459 = 256000032.000000
   38: 689 + 0.457961 + 0.949156 = 256000032.000000
   39: 689 + 0.744438 + 0.108280 = 256000032.000000
   40: 689 + 0.599048 + 0.385235 = 256000048.000000
   41: 689 + 0.735008 + 0.608966 = 256000048.000000
   42: 689 + 0.572405 + 0.361339 = 256000048.000000
   43: 689 + 0.151555 + 0.225105 = 256000048.000000
   44: 689 + 0.425153 + 0.802881 = 256000048.000000
   45: 689 + 0.517106 + 0.989990 = 256000048.000000
   46: 689 + 0.751549 + 0.345561 = 256000048.000000
   47: 689 + 0.168981 + 0.657308 = 256000048.000000
   48: 689 + 0.491897 + 0.063540 = 256000048.000000
   49: 689 + 0.699759 + 0.504807 = 256000048.000000
   50: 689 + 0.147496 + 0.949583 = 256000048.000000
   51: 689 + 0.141575 + 0.905118 = 256000048.000000
   52: 689 + 0.692892 + 0.303049 = 256000048.000000
   53: 689 + 0.426557 + 0.070376 = 256000048.000000
   54: 689 + 0.966613 + 0.683187 = 256000048.000000
   55: 689 + 0.153233 + 0.877255 = 256000048.000000
   56: 689 + 0.821680 + 0.582049 = 256000064.000000
   57: 689 + 0.191351 + 0.177892 = 256000064.000000
   58: 689 + 0.817194 + 0.475265 = 256000064.000000
   59: 689 + 0.155553 + 0.503922 = 256000064.000000
   60: 689 + 0.732017 + 0.405591 = 256000064.000000
   61: 689 + 0.279580 + 0.568743 = 256000064.000000
   62: 689 + 0.682241 + 0.755852 = 256000064.000000
   63: 689 + 0.721915 + 0.475295 = 256000064.000000
   64: 689 + 0.123020 + 0.367809 = 256000064.000000
   65: 689 + 0.834681 + 0.035096 = 256000064.000000
   66: 689 + 0.517014 + 0.662984 = 256000064.000000
   67: 689 + 0.426221 + 0.104678 = 256000064.000000
   68: 689 + 0.949339 + 0.921384 = 256000064.000000
   69: 689 + 0.549547 + 0.345988 = 256000064.000000
   70: 689 + 0.471725 + 0.374981 = 256000064.000000
   71: 689 + 0.846980 + 0.316874 = 256000064.000000
   72: 689 + 0.456099 + 0.271889 = 256000080.000000
   73: 689 + 0.982971 + 0.297800 = 256000080.000000
   74: 689 + 0.739189 + 0.567278 = 256000080.000000
   75: 689 + 0.195990 + 0.761315 = 256000080.000000
   76: 689 + 0.839442 + 0.397656 = 256000080.000000
   77: 689 + 0.500900 + 0.890164 = 256000080.000000
   78: 689 + 0.027467 + 0.994629 = 256000080.000000
   79: 689 + 0.572588 + 0.050508 = 256000080.000000
   80: 689 + 0.531327 + 0.194067 = 256000080.000000
   81: 689 + 0.843043 + 0.626759 = 256000080.000000
   82: 689 + 0.657613 + 0.197851 = 256000080.000000
   83: 689 + 0.842158 + 0.123325 = 256000080.000000
   84: 689 + 0.109928 + 0.743126 = 256000080.000000
   85: 689 + 0.314066 + 0.941069 = 256000080.000000
   86: 689 + 0.286081 + 0.336314 = 256000080.000000
   87: 689 + 0.140263 + 0.733085 = 256000080.000000
   88: 689 + 0.834620 + 0.707999 = 256000096.000000
   89: 689 + 0.600238 + 0.747215 = 256000096.000000
   90: 689 + 0.252724 + 0.144475 = 256000096.000000
   91: 689 + 0.001617 + 0.061007 = 256000096.000000
   92: 689 + 0.806238 + 0.852626 = 256000096.000000
   93: 689 + 0.210578 + 0.115604 = 256000096.000000
   94: 689 + 0.553209 + 0.014252 = 256000096.000000
   95: 689 + 0.113773 + 0.454512 = 256000096.000000
   96: 689 + 0.752220 + 0.686148 = 256000096.000000
   97: 689 + 0.543443 + 0.073885 = 256000096.000000
   98: 689 + 0.436720 + 0.201941 = 256000096.000000
   99: 689 + 0.696219 + 0.290353 = 256000096.000000
24951: 689 + 0.608936 + 0.648152 = 256097120.000000
24952: 689 + 0.407453 + 0.191626 = 256097120.000000
24953: 689 + 0.074007 + 0.957976 = 256097120.000000
24954: 689 + 0.505417 + 0.387890 = 256097120.000000
24955: 689 + 0.298166 + 0.997375 = 256097120.000000
24956: 689 + 0.800623 + 0.615619 = 256097120.000000
24957: 689 + 0.214515 + 0.631397 = 256097120.000000
24958: 689 + 0.204260 + 0.122166 = 256097120.000000
24959: 689 + 0.638142 + 0.243568 = 256097136.000000
24960: 689 + 0.580035 + 0.774010 = 256097136.000000
24961: 689 + 0.097079 + 0.367260 = 256097136.000000
24962: 689 + 0.474685 + 0.989929 = 256097136.000000
24963: 689 + 0.657888 + 0.334880 = 256097136.000000
24964: 689 + 0.795984 + 0.832392 = 256097136.000000
24965: 689 + 0.275979 + 0.350536 = 256097136.000000
24966: 689 + 0.218879 + 0.913572 = 256097136.000000
24967: 689 + 0.703421 + 0.893307 = 256097136.000000
24968: 689 + 0.601917 + 0.271798 = 256097136.000000
24969: 689 + 0.483779 + 0.856166 = 256097136.000000
24970: 689 + 0.194098 + 0.875210 = 256097136.000000
24971: 689 + 0.066744 + 0.328074 = 256097136.000000
24972: 689 + 0.914579 + 0.908414 = 256097136.000000
24973: 689 + 0.572802 + 0.424726 = 256097136.000000
24974: 689 + 0.485366 + 0.498672 = 256097136.000000
24975: 689 + 0.239662 + 0.074007 = 256097152.000000
24976: 689 + 0.699210 + 0.037904 = 256097152.000000
24977: 689 + 0.081515 + 0.163457 = 256097152.000000
24978: 689 + 0.603137 + 0.756554 = 256097152.000000
24979: 689 + 0.792688 + 0.954680 = 256097152.000000
24980: 689 + 0.879635 + 0.705344 = 256097152.000000
24981: 689 + 0.426038 + 0.171911 = 256097152.000000
24982: 689 + 0.205908 + 0.802179 = 256097152.000000
24983: 689 + 0.878964 + 0.670675 = 256097152.000000
24984: 689 + 0.873440 + 0.099155 = 256097152.000000
24985: 689 + 0.716330 + 0.092624 = 256097152.000000
24986: 689 + 0.447951 + 0.926817 = 256097152.000000
24987: 689 + 0.363231 + 0.413038 = 256097152.000000
24988: 689 + 0.752190 + 0.071261 = 256097152.000000
24989: 689 + 0.197760 + 0.787133 = 256097152.000000
24990: 689 + 0.951842 + 0.641407 = 256097152.000000
24991: 689 + 0.575671 + 0.601398 = 256097168.000000
24992: 689 + 0.026460 + 0.781152 = 256097168.000000
24993: 689 + 0.317606 + 0.136448 = 256097168.000000
24994: 689 + 0.406262 + 0.883938 = 256097168.000000
24995: 689 + 0.690817 + 0.747307 = 256097168.000000
24996: 689 + 0.056185 + 0.465590 = 256097168.000000
24997: 689 + 0.416150 + 0.967284 = 256097168.000000
24998: 689 + 0.788598 + 0.351207 = 256097168.000000
24999: 689 + 0.731468 + 0.442488 = 256097168.000000
25000: 689 + 0.085574 + 0.333201 = 256097168.000000
25001: 689 + 0.043336 + 0.102237 = 256097168.000000
25002: 689 + 0.212500 + 0.955992 = 256097168.000000
25003: 689 + 0.197577 + 0.472213 = 256097168.000000
25004: 689 + 0.903531 + 0.583972 = 256097168.000000
25005: 689 + 0.900235 + 0.536210 = 256097168.000000
25006: 689 + 0.400769 + 0.409040 = 256097168.000000
25007: 689 + 0.320261 + 0.053438 = 256097184.000000
25008: 689 + 0.128452 + 0.553667 = 256097184.000000
25009: 689 + 0.405103 + 0.736717 = 256097184.000000
25010: 689 + 0.782739 + 0.926084 = 256097184.000000
25011: 689 + 0.940489 + 0.198279 = 256097184.000000
25012: 689 + 0.118870 + 0.983490 = 256097184.000000
25013: 689 + 0.885220 + 0.069826 = 256097184.000000
25014: 689 + 0.217109 + 0.059877 = 256097184.000000
25015: 689 + 0.013184 + 0.202063 = 256097184.000000
25016: 689 + 0.508164 + 0.414563 = 256097184.000000
25017: 689 + 0.392895 + 0.351054 = 256097184.000000
25018: 689 + 0.339610 + 0.657369 = 256097184.000000
25019: 689 + 0.736137 + 0.256783 = 256097184.000000
25020: 689 + 0.364910 + 0.707480 = 256097184.000000
25021: 689 + 0.147191 + 0.520920 = 256097184.000000
25022: 689 + 0.535539 + 0.941435 = 256097184.000000
25023: 689 + 0.303720 + 0.189245 = 256097200.000000
25024: 689 + 0.978118 + 0.686819 = 256097200.000000
25025: 689 + 0.600208 + 0.445906 = 256097200.000000
25026: 689 + 0.537461 + 0.718162 = 256097200.000000
25027: 689 + 0.285989 + 0.324564 = 256097200.000000
25028: 689 + 0.267129 + 0.910672 = 256097200.000000
25029: 689 + 0.128391 + 0.844172 = 256097200.000000
25030: 689 + 0.648000 + 0.708792 = 256097200.000000
25031: 689 + 0.632557 + 0.474166 = 256097200.000000
25032: 689 + 0.817133 + 0.565172 = 256097200.000000
25033: 689 + 0.349132 + 0.336344 = 256097200.000000
25034: 689 + 0.587298 + 0.006745 = 256097200.000000
25035: 689 + 0.301309 + 0.049257 = 256097200.000000
25036: 689 + 0.538957 + 0.484054 = 256097200.000000
25037: 689 + 0.061983 + 0.621326 = 256097200.000000
25038: 689 + 0.965758 + 0.659719 = 256097216.000000
25039: 689 + 0.512650 + 0.299081 = 256097216.000000
25040: 689 + 0.954497 + 0.293130 = 256097216.000000
25041: 689 + 0.815241 + 0.776971 = 256097216.000000
25042: 689 + 0.381664 + 0.376598 = 256097216.000000
25043: 689 + 0.628040 + 0.674184 = 256097216.000000
25044: 689 + 0.106662 + 0.679983 = 256097216.000000
25045: 689 + 0.097140 + 0.685995 = 256097216.000000
25046: 689 + 0.143986 + 0.359600 = 256097216.000000
25047: 689 + 0.654256 + 0.314615 = 256097216.000000
25048: 689 + 0.094790 + 0.788171 = 256097216.000000
25049: 689 + 0.152562 + 0.586718 = 256097216.000000
49901: 689 + 0.412244 + 0.172308 = 256194240.000000
49902: 689 + 0.288400 + 0.420759 = 256194240.000000
49903: 689 + 0.073672 + 0.989807 = 256194240.000000
49904: 689 + 0.042207 + 0.706717 = 256194240.000000
49905: 689 + 0.075411 + 0.899899 = 256194240.000000
49906: 689 + 0.083285 + 0.716544 = 256194240.000000
49907: 689 + 0.304971 + 0.459548 = 256194240.000000
49908: 689 + 0.583209 + 0.908719 = 256194240.000000
49909: 689 + 0.967559 + 0.811426 = 256194240.000000
49910: 689 + 0.339152 + 0.716056 = 256194256.000000
49911: 689 + 0.790368 + 0.196051 = 256194256.000000
49912: 689 + 0.862209 + 0.406903 = 256194256.000000
49913: 689 + 0.064791 + 0.950865 = 256194256.000000
49914: 689 + 0.006043 + 0.322855 = 256194256.000000
49915: 689 + 0.557604 + 0.901028 = 256194256.000000
49916: 689 + 0.418561 + 0.649861 = 256194256.000000
49917: 689 + 0.822565 + 0.549821 = 256194256.000000
49918: 689 + 0.596332 + 0.378979 = 256194256.000000
49919: 689 + 0.943754 + 0.973601 = 256194256.000000
49920: 689 + 0.824427 + 0.612476 = 256195008.000000
49921: 689 + 0.241707 + 0.828303 = 256195008.000000
49922: 689 + 0.781976 + 0.872189 = 256195008.000000
49923: 689 + 0.973907 + 0.373516 = 256195008.000000
49924: 689 + 0.094913 + 0.565783 = 256195008.000000
49925: 689 + 0.560106 + 0.920438 = 256195008.000000
49926: 689 + 0.617542 + 0.267800 = 256195008.000000
49927: 689 + 0.365154 + 0.609607 = 256195008.000000
49928: 689 + 0.723380 + 0.971252 = 256195008.000000
49929: 689 + 0.568896 + 0.925413 = 256195008.000000
49930: 689 + 0.387585 + 0.966002 = 256195008.000000
49931: 689 + 0.155644 + 0.852779 = 256195008.000000
49932: 689 + 0.341319 + 0.500565 = 256195008.000000
49933: 689 + 0.554003 + 0.083041 = 256195008.000000
49934: 689 + 0.079562 + 0.883480 = 256195008.000000
49935: 689 + 0.958220 + 0.174566 = 256195008.000000
49936: 689 + 0.003876 + 0.179907 = 256195024.000000
49937: 689 + 0.862514 + 0.074831 = 256195024.000000
49938: 689 + 0.481216 + 0.160802 = 256195024.000000
49939: 689 + 0.839503 + 0.910245 = 256195024.000000
49940: 689 + 0.099704 + 0.659719 = 256195024.000000
49941: 689 + 0.094058 + 0.449477 = 256195024.000000
49942: 689 + 0.903378 + 0.994385 = 256195024.000000
49943: 689 + 0.823756 + 0.147160 = 256195024.000000
49944: 689 + 0.886258 + 0.608997 = 256195024.000000
49945: 689 + 0.917264 + 0.173772 = 256195024.000000
49946: 689 + 0.527665 + 0.593310 = 256195024.000000
49947: 689 + 0.021790 + 0.338054 = 256195024.000000
49948: 689 + 0.649861 + 0.234993 = 256195024.000000
49949: 689 + 0.511124 + 0.308420 = 256195024.000000
49950: 689 + 0.379009 + 0.261574 = 256195024.000000
49951: 689 + 0.384899 + 0.039247 = 256195024.000000
49952: 689 + 0.491043 + 0.927824 = 256195040.000000
49953: 689 + 0.631397 + 0.808771 = 256195040.000000
49954: 689 + 0.923490 + 0.605152 = 256195040.000000
49955: 689 + 0.083682 + 0.774071 = 256195040.000000
49956: 689 + 0.734519 + 0.029603 = 256195040.000000
49957: 689 + 0.302042 + 0.450545 = 256195040.000000
49958: 689 + 0.290719 + 0.863765 = 256195040.000000
49959: 689 + 0.512070 + 0.020936 = 256195040.000000
49960: 689 + 0.964354 + 0.729545 = 256195040.000000
49961: 689 + 0.131596 + 0.880825 = 256195040.000000
49962: 689 + 0.121799 + 0.368145 = 256195040.000000
49963: 689 + 0.916105 + 0.326823 = 256195040.000000
49964: 689 + 0.684255 + 0.082949 = 256195040.000000
49965: 689 + 0.254677 + 0.793542 = 256195040.000000
49966: 689 + 0.041780 + 0.122013 = 256195040.000000
49967: 689 + 0.647908 + 0.545457 = 256195040.000000
49968: 689 + 0.602557 + 0.156163 = 256195056.000000
49969: 689 + 0.898221 + 0.230445 = 256195056.000000
49970: 689 + 0.757439 + 0.509140 = 256195056.000000
49971: 689 + 0.044649 + 0.200598 = 256195056.000000
49972: 689 + 0.542528 + 0.295846 = 256195056.000000
49973: 689 + 0.572954 + 0.006897 = 256195056.000000
49974: 689 + 0.779778 + 0.125217 = 256195056.000000
49975: 689 + 0.932340 + 0.974334 = 256195056.000000
49976: 689 + 0.977477 + 0.523576 = 256195056.000000
49977: 689 + 0.889950 + 0.262581 = 256195056.000000
49978: 689 + 0.771844 + 0.735099 = 256195056.000000
49979: 689 + 0.754784 + 0.320322 = 256195056.000000
49980: 689 + 0.190771 + 0.055391 = 256195056.000000
49981: 689 + 0.001740 + 0.137272 = 256195056.000000
49982: 689 + 0.521256 + 0.354656 = 256195056.000000
49983: 689 + 0.327525 + 0.202185 = 256195056.000000
49984: 689 + 0.061281 + 0.946379 = 256195072.000000
49985: 689 + 0.669088 + 0.571642 = 256195072.000000
49986: 689 + 0.538041 + 0.457991 = 256195072.000000
49987: 689 + 0.216681 + 0.956664 = 256195072.000000
49988: 689 + 0.473251 + 0.860042 = 256195072.000000
49989: 689 + 0.952025 + 0.233070 = 256195072.000000
49990: 689 + 0.277047 + 0.309305 = 256195072.000000
49991: 689 + 0.742973 + 0.281961 = 256195072.000000
49992: 689 + 0.351604 + 0.963042 = 256195072.000000
49993: 689 + 0.526475 + 0.566424 = 256195072.000000
49994: 689 + 0.985809 + 0.419965 = 256195072.000000
49995: 689 + 0.610370 + 0.350993 = 256195072.000000
49996: 689 + 0.322092 + 0.944578 = 256195072.000000
49997: 689 + 0.625629 + 0.969787 = 256195072.000000
49998: 689 + 0.177038 + 0.130619 = 256195072.000000
49999: 689 + 0.160314 + 0.049715 = 256195072.000000



689 Done
0.000000        1.000000        4.000000        9.000000
16.000000       25.000000       36.000000       49.000000
64.000000       81.000000       100.000000      121.000000
144.000000      169.000000      196.000000      225.000000
256.000000      289.000000      324.000000      361.000000
400.000000      441.000000      484.000000      529.000000
576.000000      625.000000      676.000000      729.000000
784.000000      841.000000      900.000000      961.000000
1024.000000     1089.000000     1156.000000     1225.000000
1296.000000     1369.000000     1444.000000     1521.000000
1600.000000     1681.000000     1764.000000     1849.000000
1936.000000     2025.000000     2116.000000     2209.000000
2304.000000     2401.000000     2500.000000     2601.000000
2704.000000     2809.000000     2916.000000     3025.000000
3136.000000     3249.000000     3364.000000     3481.000000
3600.000000     3721.000000     3844.000000     3969.000000
result of mainSquare is 0
0.000000        1.000000        8.000000        27.000000
64.000000       125.000000      216.000000      343.000000
512.000000      729.000000      1000.000000     1331.000000
1728.000000     2197.000000     2744.000000     3375.000000
4096.000000     4913.000000     5832.000000     6859.000000
8000.000000     9261.000000     10648.000000    12167.000000
13824.000000    15625.000000    17576.000000    19683.000000
21952.000000    24389.000000    27000.000000    29791.000000
32768.000000    35937.000000    39304.000000    42875.000000
46656.000000    50653.000000    54872.000000    59319.000000
64000.000000    68921.000000    74088.000000    79507.000000
85184.000000    91125.000000    97336.000000    103823.000000
110592.000000   117649.000000   125000.000000   132651.000000
140608.000000   148877.000000   157464.000000   166375.000000
175616.000000   185193.000000   195112.000000   205379.000000
216000.000000   226981.000000   238328.000000   250047.000000
result of mainCube is 0

=================================================================

D:
cd D:\git-clone\various-test-pc\bin\win64\Debug --> cd D:\git-clone\cs344\dennis-test\0_Simple\CUDA-Sample-Copy\bin\win64\Debug
vectorAdd.exe

-----------------------------------------------------------------

1>------ Build started: Project: vectorAdd, Configuration: Debug x64 ------
1>  Compiling CUDA source file myVectorCube.cu...
1>  
1>  D:\git-clone\various-test-pc\CUDA-Sample-Copy\0_Simple\vectorAdd>"D:\CUDA-7.5\bin\nvcc.exe" -gencode=arch=compute_20,code=\"sm_20,compute_20\" -gencode=arch=compute_30,code=\"sm_30,compute_30\" -gencode=arch=compute_35,code=\"sm_35,compute_35\" -gencode=arch=compute_37,code=\"sm_37,compute_37\" -gencode=arch=compute_50,code=\"sm_50,compute_50\" -gencode=arch=compute_52,code=\"sm_52,compute_52\" --use-local-env --cl-version 2013 -ccbin "D:\vd2013ce\VC\bin\x86_amd64"  -I./ -I../../common/inc -I./ -I"D:\CUDA-7.5\/include" -I../../common/inc -I"D:\CUDA-7.5\include"  -G   --keep-dir x64\Debug -maxrregcount=0  --machine 64 --compile -cudart static -Xcompiler "/wd 4819"  -g   -DWIN32 -DWIN32 -D_MBCS -D_MBCS -Xcompiler "/EHsc /W3 /nologo /Od /Zi /RTC1 /MTd " -o x64/Debug/myVectorCube.cu.obj "D:\git-clone\various-test-pc\CUDA-Sample-Copy\0_Simple\vectorAdd\myVectorCube.cu" 
1>  myVectorCube.cu
1>  vectorAdd_vs2013.vcxproj -> D:\git-clone\various-test-pc\CUDA-Sample-Copy\0_Simple\vectorAdd\../../bin/win64/Debug/vectorAdd.exe
========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========

deviceQuery.exe
deviceQuery.exe Starting...

 CUDA Device Query (Runtime API) version (CUDART static linking)

Detected 1 CUDA Capable device(s)

Device 0: "GeForce GTX 960M"
  CUDA Driver Version / Runtime Version          7.5 / 7.5
  CUDA Capability Major/Minor version number:    5.0
  Total amount of global memory:                 4096 MBytes (4294967296 bytes)
  ( 5) Multiprocessors, (128) CUDA Cores/MP:     640 CUDA Cores
  GPU Max Clock rate:                            1176 MHz (1.18 GHz)
  Memory Clock rate:                             2505 Mhz
  Memory Bus Width:                              128-bit
  L2 Cache Size:                                 2097152 bytes
  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)
  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers
  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers
  Total amount of constant memory:               65536 bytes
  Total amount of shared memory per block:       49152 bytes
  Total number of registers available per block: 65536
  Warp size:                                     32
  Maximum number of threads per multiprocessor:  2048
  Maximum number of threads per block:           1024
  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and kernel execution:          Yes with 1 copy engine(s)
  Run time limit on kernels:                     Yes
  Integrated GPU sharing Host Memory:            No
  Support host page-locked memory mapping:       Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support:                        Disabled
  CUDA Device Driver Mode (TCC or WDDM):         WDDM (Windows Display Driver Model)
  Device supports Unified Addressing (UVA):      Yes
  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
  Compute Mode:
     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >

deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 7.5, CUDA Runtime Version = 7.5, NumDevs = 1, Device0 = GeForce GTX 960M
Result = PASS

D:\git-clone\various-test-pc\bin\win64\Debug>cd D:\git-clone\various-test-pc\bin\win64\Debug

Move to D:\git-clone\cs344\dennis-test\0_Simple\CUDA-Sample-Copy\0_Simple\vectorAdd

and the bin file would be changed

cd D:\git-clone\cs344\dennis-test\0_Simple\CUDA-Sample-Copy\bin\win64\Debug

























